{"version":3,"sources":["components/FeedbackOptions/FeedbackOptions.module.css","components/Section/Section.module.css","components/Statistics/Statistics.module.css","components/Section/Section.js","components/FeedbackOptions/FeedbackOptions.js","components/Statistics/Statistics.js","components/Notification/Notification.js","App.js","index.js"],"names":["module","exports","Section","title","children","className","style","section","FeedbackOptions","options","onLeaveFeedback","buttonList","map","option","index","type","button","name","onClick","Statistics","good","neutral","bad","total","positivePercentage","statisticsList","Notification","message","prototype","Proptypes","string","isRequired","App","useState","setGood","setNeutral","setBad","countTotalFeedback","Math","round","countPositiveFeedbackPercentage","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6IACAA,EAAOC,QAAU,CAAC,OAAS,gCAAgC,WAAa,sC,iBCAxED,EAAOC,QAAU,CAAC,QAAU,2B,gBCA5BD,EAAOC,QAAU,CAAC,eAAiB,mCAAmC,eAAiB,qC,kKCexEC,EAZC,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,SAAV,OACd,0BAASC,UAAWC,IAAMC,QAA1B,UACE,6BAAKJ,IACJC,M,gBCmBUI,EAtBS,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAASC,EAAZ,EAAYA,gBAAZ,OACtB,oBAAIL,UAAWC,IAAMK,WAArB,SACGF,EAAQG,KAAI,SAACC,EAAQC,GAAT,OACX,6BACE,wBACEC,KAAK,SACLV,UAAWC,IAAMU,OACjBC,KAAMJ,EACNK,QAAS,kBAAMR,EAAgBG,IAJjC,SAMGA,KAPIC,S,gBCYAK,EAfI,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,QAASC,EAAlB,EAAkBA,IAAKC,EAAvB,EAAuBA,MAAOC,EAA9B,EAA8BA,mBAA9B,OACjB,qBAAInB,UAAWC,IAAMmB,eAArB,UACE,wCAAWL,KACX,2CAAcC,KACd,uCAAUC,KACV,yCAAYC,KACZ,qDAAwBC,EAAxB,Y,OCPEE,EAAe,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAAH,OAAiB,4BAAIA,KAE1CD,EAAaE,UAAY,CACvBD,Q,OAASE,EAAUC,OAAOC,YAGbL,QCFA,SAASM,IACtB,MAAwBC,mBAAS,GAAjC,mBAAOb,EAAP,KAAac,EAAb,KACA,EAA8BD,mBAAS,GAAvC,mBAAOZ,EAAP,KAAgBc,EAAhB,KACA,EAAsBF,mBAAS,GAA/B,mBAAOX,EAAP,KAAYc,EAAZ,KAoBMC,EAAqB,WACzB,OAAOjB,EAAOC,EAAUC,GAQ1B,OACE,qCACE,cAAC,EAAD,CAASnB,MAAM,wBAAf,SACE,cAAC,EAAD,CAAiBM,QA9BP,CAAC,OAAQ,UAAW,OA8BKC,gBA5BnB,SAAAG,GACpB,OAAQA,GACN,IAAK,OACHqB,EAAQd,EAAO,GACf,MACF,IAAK,UACHe,EAAWd,EAAU,GACrB,MACF,IAAK,MACHe,EAAOd,EAAM,GACb,MACF,QACE,aAmBF,cAAC,EAAD,CAASnB,MAAM,aAAf,SACGkC,IAAuB,EACtB,cAAC,EAAD,CACElC,MAAM,aACNiB,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOc,IACPb,mBAnB8B,WACtC,IAAMD,EAAQc,IACd,OAAOC,KAAKC,MAAOnB,EAAOG,EAAS,MAAQ,EAiBfiB,KAGtB,cAAC,EAAD,CAAcb,QAAQ,2BCnDhCc,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.0367811b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"FeedbackOptions_button__1-N5d\",\"buttonList\":\"FeedbackOptions_buttonList__3osZl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Section_section__23P02\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"statisticsList\":\"Statistics_statisticsList__2rxn_\",\"statisticsItem\":\"Statistics_statisticsItem__2jd6r\"};","import React from 'react';\nimport PropTypes from 'prop-types';\nimport style from './Section.module.css';\n\nconst Section = ({ title, children }) => (\n  <section className={style.section}>\n    <h2>{title}</h2>\n    {children}\n  </section>\n);\n\nSection.propTypes = {\n  title: PropTypes.string,\n  children: PropTypes.node.isRequired,\n};\n\nexport default Section;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport style from './FeedbackOptions.module.css';\n\nconst FeedbackOptions = ({ options, onLeaveFeedback }) => (\n  <ul className={style.buttonList}>\n    {options.map((option, index) => (\n      <li key={index}>\n        <button\n          type=\"button\"\n          className={style.button}\n          name={option}\n          onClick={() => onLeaveFeedback(option)}\n        >\n          {option}\n        </button>\n      </li>\n    ))}\n  </ul>\n);\n\nFeedbackOptions.propTypes = {\n  options: PropTypes.array.isRequired,\n  onLeaveFeedback: PropTypes.func.isRequired,\n};\n\nexport default FeedbackOptions;\n","import React from 'react';\nimport style from './Statistics.module.css';\nimport PropTypes from 'prop-types';\n\nconst Statistics = ({ good, neutral, bad, total, positivePercentage }) => (\n  <ul className={style.statisticsList}>\n    <li>Good: {good}</li>\n    <li>Neutral: {neutral}</li>\n    <li>Bad: {bad}</li>\n    <li>Total: {total}</li>\n    <li>Positive feedback: {positivePercentage} %</li>\n  </ul>\n);\n\nStatistics.propTypes = {\n  title: PropTypes.string,\n  state: PropTypes.objectOf(PropTypes.number),\n};\n\nexport default Statistics;\n","import React from 'react';\nimport Proptypes from 'prop-types';\n\nconst Notification = ({ message }) => <p>{message}</p>;\n\nNotification.prototype = {\n  message: Proptypes.string.isRequired,\n};\n\nexport default Notification;\n","import { useState } from 'react';\nimport './App.css';\nimport Section from './components/Section/';\nimport FeedbackOptions from './components/FeedbackOptions/';\nimport Statistics from './components/Statistics/';\nimport Notification from './components/Notification/';\n\nexport default function App() {\n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBad] = useState(0);\n\n  const options = ['good', 'neutral', 'bad'];\n\n  const handleCounter = option => {\n    switch (option) {\n      case 'good':\n        setGood(good + 1);\n        break;\n      case 'neutral':\n        setNeutral(neutral + 1);\n        break;\n      case 'bad':\n        setBad(bad + 1);\n        break;\n      default:\n        return;\n    }\n  };\n\n  const countTotalFeedback = () => {\n    return good + neutral + bad;\n  };\n\n  const countPositiveFeedbackPercentage = () => {\n    const total = countTotalFeedback();\n    return Math.round((good / total) * 100) || 0;\n  };\n\n  return (\n    <>\n      <Section title=\"Please leave feedback\">\n        <FeedbackOptions options={options} onLeaveFeedback={handleCounter} />\n      </Section>\n\n      <Section title=\"Statistics\">\n        {countTotalFeedback() > 0 ? (\n          <Statistics\n            title=\"Statistics\"\n            good={good}\n            neutral={neutral}\n            bad={bad}\n            total={countTotalFeedback()}\n            positivePercentage={countPositiveFeedbackPercentage()}\n          />\n        ) : (\n          <Notification message=\"No feedback given\" />\n        )}\n      </Section>\n    </>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}